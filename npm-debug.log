0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'nodemon', '-g' ]
2 info using npm@1.1.63
3 info using node@v0.8.12
4 verbose read json /usr/local/lib/package.json
5 verbose read json /usr/local/lib/package.json
6 verbose cache add [ 'nodemon', null ]
7 silly cache add name=undefined spec="nodemon" args=["nodemon",null]
8 verbose parsed url { pathname: 'nodemon', path: 'nodemon', href: 'nodemon' }
9 silly lockFile 1625b929-nodemon nodemon
10 verbose lock nodemon /Users/siandiaz/.npm/1625b929-nodemon.lock
11 silly lockFile 1625b929-nodemon nodemon
12 verbose addNamed [ 'nodemon', '' ]
13 verbose addNamed [ null, '' ]
14 silly lockFile 4f5e51c6-nodemon nodemon@
15 verbose lock nodemon@ /Users/siandiaz/.npm/4f5e51c6-nodemon.lock
16 silly addNameRange { name: 'nodemon', range: '', hasData: false }
17 verbose url raw nodemon
18 verbose url resolving [ 'https://registry.npmjs.org/', './nodemon' ]
19 verbose url resolved https://registry.npmjs.org/nodemon
20 info trying registry request attempt 1 at 16:58:32
21 http GET https://registry.npmjs.org/nodemon
22 http 200 https://registry.npmjs.org/nodemon
23 silly registry.get cb [ 200,
23 silly registry.get   { vary: 'Accept',
23 silly registry.get     server: 'CouchDB/1.2.1 (Erlang OTP/R15B)',
23 silly registry.get     etag: '"1QFNVRLDB3WIVIJE54YJ9IIET"',
23 silly registry.get     date: 'Wed, 30 Jan 2013 22:56:53 GMT',
23 silly registry.get     'content-type': 'application/json',
23 silly registry.get     'content-length': '216083' } ]
24 silly addNameRange number 2 { name: 'nodemon', range: '', hasData: true }
25 silly addNameRange versions [ 'nodemon',
25 silly addNameRange   [ '0.1.4',
25 silly addNameRange     '0.1.5',
25 silly addNameRange     '0.1.6',
25 silly addNameRange     '0.1.7',
25 silly addNameRange     '0.1.8',
25 silly addNameRange     '0.2.0',
25 silly addNameRange     '0.2.1',
25 silly addNameRange     '0.2.2',
25 silly addNameRange     '0.3.0',
25 silly addNameRange     '0.3.1',
25 silly addNameRange     '0.3.2',
25 silly addNameRange     '0.4.0',
25 silly addNameRange     '0.4.1',
25 silly addNameRange     '0.5.0',
25 silly addNameRange     '0.5.1',
25 silly addNameRange     '0.5.2',
25 silly addNameRange     '0.5.3',
25 silly addNameRange     '0.5.4',
25 silly addNameRange     '0.5.5',
25 silly addNameRange     '0.5.6',
25 silly addNameRange     '0.5.7',
25 silly addNameRange     '0.6.0',
25 silly addNameRange     '0.6.1',
25 silly addNameRange     '0.6.2',
25 silly addNameRange     '0.6.3',
25 silly addNameRange     '0.6.4',
25 silly addNameRange     '0.6.5',
25 silly addNameRange     '0.6.6',
25 silly addNameRange     '0.6.7',
25 silly addNameRange     '0.6.8',
25 silly addNameRange     '0.6.9',
25 silly addNameRange     '0.6.10',
25 silly addNameRange     '0.6.10a',
25 silly addNameRange     '0.6.11',
25 silly addNameRange     '0.6.12',
25 silly addNameRange     '0.6.13',
25 silly addNameRange     '0.6.14',
25 silly addNameRange     '0.6.15',
25 silly addNameRange     '0.6.16',
25 silly addNameRange     '0.6.17',
25 silly addNameRange     '0.6.18',
25 silly addNameRange     '0.6.19',
25 silly addNameRange     '0.6.20',
25 silly addNameRange     '0.6.21',
25 silly addNameRange     '0.6.22',
25 silly addNameRange     '0.6.23',
25 silly addNameRange     '0.7.0',
25 silly addNameRange     '0.7.1' ] ]
26 verbose addNamed [ 'nodemon', '0.7.1' ]
27 verbose addNamed [ '0.7.1', '0.7.1' ]
28 silly lockFile 13505fa9-nodemon-0-7-1 nodemon@0.7.1
29 verbose lock nodemon@0.7.1 /Users/siandiaz/.npm/13505fa9-nodemon-0-7-1.lock
30 silly lockFile eeb06481-js-org-nodemon-nodemon-0-7-1-tgz https://registry.npmjs.org/nodemon/-/nodemon-0.7.1.tgz
31 verbose lock https://registry.npmjs.org/nodemon/-/nodemon-0.7.1.tgz /Users/siandiaz/.npm/eeb06481-js-org-nodemon-nodemon-0-7-1-tgz.lock
32 verbose addRemoteTarball [ 'https://registry.npmjs.org/nodemon/-/nodemon-0.7.1.tgz',
32 verbose addRemoteTarball   'f774a11522cbf86e29987bcc723506b06dae73ff' ]
33 info retry fetch attempt 1 at 16:58:36
34 verbose fetch to= /var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/tmp.tgz
35 http GET https://registry.npmjs.org/nodemon/-/nodemon-0.7.1.tgz
36 http 200 https://registry.npmjs.org/nodemon/-/nodemon-0.7.1.tgz
37 silly shasum updated bytes 11433
38 info shasum f774a11522cbf86e29987bcc723506b06dae73ff
38 info shasum /var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/tmp.tgz
39 verbose tar unpack /var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/tmp.tgz
40 silly lockFile 517fdc43-6900-0-45338232070207596-package /var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/package
41 verbose lock /var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/package /Users/siandiaz/.npm/517fdc43-6900-0-45338232070207596-package.lock
42 silly gunzTarPerm modes [ '755', '644' ]
43 silly gunzTarPerm extractEntry package.json
44 silly gunzTarPerm extractEntry .npmignore
45 silly gunzTarPerm extractEntry README.md
46 silly gunzTarPerm extractEntry nodemon.js
47 silly gunzTarPerm extractEntry nodemonignore.example
48 verbose read json /var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/package/package.json
49 silly lockFile 517fdc43-6900-0-45338232070207596-package /var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/package
50 verbose from cache /var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/package/package.json
51 verbose tar pack [ '/Users/siandiaz/.npm/nodemon/0.7.1/package.tgz',
51 verbose tar pack   '/var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/package' ]
52 verbose tarball /Users/siandiaz/.npm/nodemon/0.7.1/package.tgz
53 verbose folder /var/folders/wz/l15bnllx1rxb98tmmy42bfbc0000gp/T/npm-15189/1359586716900-0.45338232070207596/package
54 silly lockFile e7c92801-az-npm-nodemon-0-7-1-package-tgz /Users/siandiaz/.npm/nodemon/0.7.1/package.tgz
55 verbose lock /Users/siandiaz/.npm/nodemon/0.7.1/package.tgz /Users/siandiaz/.npm/e7c92801-az-npm-nodemon-0-7-1-package-tgz.lock
56 silly lockFile e7c92801-az-npm-nodemon-0-7-1-package-tgz /Users/siandiaz/.npm/nodemon/0.7.1/package.tgz
57 silly lockFile 4ad16ace-andiaz-npm-nodemon-0-7-1-package /Users/siandiaz/.npm/nodemon/0.7.1/package
58 verbose lock /Users/siandiaz/.npm/nodemon/0.7.1/package /Users/siandiaz/.npm/4ad16ace-andiaz-npm-nodemon-0-7-1-package.lock
59 silly lockFile 4ad16ace-andiaz-npm-nodemon-0-7-1-package /Users/siandiaz/.npm/nodemon/0.7.1/package
60 verbose tar unpack /Users/siandiaz/.npm/nodemon/0.7.1/package.tgz
61 silly lockFile 4ad16ace-andiaz-npm-nodemon-0-7-1-package /Users/siandiaz/.npm/nodemon/0.7.1/package
62 verbose lock /Users/siandiaz/.npm/nodemon/0.7.1/package /Users/siandiaz/.npm/4ad16ace-andiaz-npm-nodemon-0-7-1-package.lock
63 silly gunzTarPerm modes [ '755', '644' ]
64 silly gunzTarPerm extractEntry package.json
65 silly gunzTarPerm extractEntry .npmignore
66 silly gunzTarPerm extractEntry README.md
67 silly gunzTarPerm extractEntry nodemon.js
68 silly gunzTarPerm extractEntry nodemonignore.example
69 verbose read json /Users/siandiaz/.npm/nodemon/0.7.1/package/package.json
70 silly lockFile 4ad16ace-andiaz-npm-nodemon-0-7-1-package /Users/siandiaz/.npm/nodemon/0.7.1/package
71 silly shasum updated bytes 11431
72 info shasum f51de455aed0ae0d5f6e949b7f2b3aaf7f5c2636
72 info shasum /Users/siandiaz/.npm/nodemon/0.7.1/package.tgz
73 verbose from cache /Users/siandiaz/.npm/nodemon/0.7.1/package/package.json
74 verbose chmod /Users/siandiaz/.npm/nodemon/0.7.1/package.tgz 644
75 verbose chown /Users/siandiaz/.npm/nodemon/0.7.1/package.tgz [ 502, 20 ]
76 silly lockFile eeb06481-js-org-nodemon-nodemon-0-7-1-tgz https://registry.npmjs.org/nodemon/-/nodemon-0.7.1.tgz
77 silly lockFile 13505fa9-nodemon-0-7-1 nodemon@0.7.1
78 silly lockFile 4f5e51c6-nodemon nodemon@
79 silly resolved [ { name: 'nodemon',
79 silly resolved     homepage: 'http://github.com/remy/nodemon',
79 silly resolved     author: { name: 'Remy Sharp', url: 'http://github.com/remy' },
79 silly resolved     bin: { nodemon: './nodemon.js' },
79 silly resolved     repository: { type: 'git', url: 'http://github.com/remy/nodemon.git' },
79 silly resolved     description: 'Simple monitor script for use during development of a node.js app.',
79 silly resolved     keywords:
79 silly resolved      [ 'monitor',
79 silly resolved        'development',
79 silly resolved        'restart',
79 silly resolved        'autoload',
79 silly resolved        'reload',
79 silly resolved        'terminal' ],
79 silly resolved     version: '0.7.1',
79 silly resolved     preferGlobal: 'true',
79 silly resolved     licenses: [ [Object] ],
79 silly resolved     main: './nodemon',
79 silly resolved     readme: '# nodemon\n\nFor use during development of a node.js based application. \n\nnodemon will watch the files in the directory that nodemon was started, and if they change, it will automatically restart your node application.\n\nnodemon does **not** require *any* changes to your code or method of development. nodemon simply wraps your node application and keeps an eye on any files that have changed. Remember that nodemon is a replacement wrapper for `node`, think of it as replacing the word "node" on the command line when you run your script.\n\n# Installation\n\nEither through forking or by using [npm](http://npmjs.org) (the recommended way):\n\n    npm install nodemon -g\n    \nAnd nodemon will be installed in to your bin path. Note that as of npm v1, you must explicitly tell npm to install globally as nodemon is a command line utility.\n\n# Usage\n\nnodemon wraps your application, so you can pass all the arguments you would normally pass to your app:\n\n    nodemon [your node app]\n\nFor example, if my application accepted a host and port as the arguments, I would start it as so:\n\n    nodemon ./server.js localhost 8080\n\nAny output from this script is prefixed with `[nodemon]`, otherwise all output from your application, errors included, will be echoed out as expected.\n\nnodemon also supports running and monitoring [coffee-script](http://jashkenas.github.com/coffee-script/) apps:\n\n    nodemon server.coffee\n\nIf no script is given, nodemon will test for a `package.json` file and if found, will run the file associated with the *main* property ([ref](https://github.com/remy/nodemon/issues/14)).\n\nYou can also pass the debug flag to node through the command line as you would normally:\n\n    nodemon --debug ./server.js 80\n\nIf you have a `package.json` file for your app, you can omit the main script entirely and nodemon will read the `package.json` for the `main` property and use that value as the app.\n\n# Automatic re-running\n\nnodemon was original written to restart hanging processes such as web servers, but now supports apps that cleanly exit. If your script exits cleanly, nodemon will continue to monitor the directory (or directories) and restart the script if there are any changes.\n\n# Running non-node scripts\n\nnodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of .js if there\'s no .nodemonignore:\n\n    nodemon --exec "python -v" ./app.py\n\nNow nodemon will run `app.py` with python in verbose mode (note that if you\'re not passing args to the exec program, you don\'t need the quotes), and look for new or modified files with the `.py` extension.\n\n# Monitoring multiple directories\n\nBy default nodemon monitors the current working directory. If you want to take control of that option, use the `--watch` option to add specific paths:\n\n    nodemon --watch app --watch libs app/server.js\n\nNow nodemon will only restart if there are changes in the `./app` or `./libs` directory. By default nodemon will traverse sub-directories, so there\'s no need in explicitly including sub-directories.\n\n# Specifying extension watch list\n\nBy default, nodemon looks for files with the `.js` extension. If you use the `--exec` option and monitor `app.py` nodemon will monitor files with the extension of `.py`. However, you can specify your own list with the `-e` switch like so:\n\n    nodemon --ext \'.js|.css|.html\'\n    \nOr with alternative syntax:\n\n    nodemon -e js,css,html\n\nNow nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions .js, .css or .html.\n\n# Delaying restarting\n\nIn some situations, you may want to wait until a number of files have changed. The timeout before checking for new file changes is 1 second. If you\'re uploading a number of files and it\'s taking some number of seconds, this could cause your app to restart multiple time unnecessarily.\n\nTo add an extra throttle, or delay restarting, use the `--delay` command:\n\n    nodemon --delay 10 server.js\n\nThe delay figure is number of seconds to delay before restarting. So nodemon will only restart your app the given number of seconds after the *last* file change.\n\n# Ignoring files\n\nBy default, if nodemon will only restart when a `.js` JavaScript file changes.  In some cases you will want to ignore some specific files, directories or file patterns, to prevent nodemon from prematurely restarting your application.\n\nYou can use the [example ignore file](http://github.com/remy/nodemon/blob/master/nodemonignore.example) (note that this example file is not hidden - you must rename it to `.nodemonignore`) as a basis for your nodemon, but it\'s very simple to create your own:\n\n    # this is my ignore file with a nice comment at the top\n    \n    /vendor/*     # ignore all external submodules\n    /public/*     # static files\n    ./README.md   # a specific file\n    *.css         # ignore any CSS files too\n    :(\\d)*\\.js    # monitor javascript files with only digits in their name\n\nThe ignore file accepts:\n\n* Comments starting with a `#` symbol\n* Blank lines\n* Specific files\n* File patterns (this is converted to a regex, so you have full control of the pattern)\n* Unescaped regex\'s begining with `:`.\n\n# Controlling shutdown of your script\n\nnodemon sends a kill signal to your application when it sees a file update. If you need to clean up on shutdown inside your script you can capture the kill signal and handle it yourself.\n\nThe following example will listen once for the `SIGUSR2` signal (used by nodemon to restart), run the clean up process and then kill itself for nodemon to continue control:\n\n    process.once(\'SIGUSR2\', function () {\n      gracefulShutdown(function () {\n        process.kill(process.pid, \'SIGUSR2\'); \n      })\n    });\n\nNote that the `process.kill` is *only* called once your shutdown jobs are complete. Hat tip to [Benjie Gillam](http://www.benjiegillam.com/2011/08/node-js-clean-restart-and-faster-development-with-nodemon/) for writing technique this up.\n\n\n# Using nodemon with forever\n\nIf you\'re using nodemon with [forever](https://github.com/nodejitsu/forever) (perhaps in a production environment) you can combine the two together. This way if the script crashes, forever restarts the script, and if there are file changes, nodemon restarts your script. For more detail, see [issue 30](https://github.com/remy/nodemon/issues/30).\n\nTo acheive this you need to include the `--exitcrash` flag to ensure nodemon exits if the script crashes (or exits unexpectedly):\n\n    forever nodemon --exitcrash server.js\n\nTo test this, you can kill the server.js process and forever will restart it. If you `touch server.js` nodemon will restart it.\n\nNote that I *would not* recommend using nodemon in a production environment - but that\'s because I wouldn\'t want it restart without my explicit instruction.\n\n# Help! My changes aren\'t being detected!\n\nnodemon has three potential methods it uses to look for file changes. First, it polls using the find command to search for files modified within the last second. This method works on systems with a BSD based find (Mac, for example). \n\nNext it tries using node\'s fs.watch. fs.watch will not always work however, and nodemon will try and detect if this is the case by writing a file to the tmp directory and seeing if fs.watch is triggered when it\'s removed. If nodemon finds that fs.watch was not triggered, it will then fall back to the third method (called legacy watch), which works by statting each file in your working directory looking for changes to the last modified time. This is the most cpu intensive method, but it may be the only option on some systems.\n\nIn certain cases, like when where you are working on a different drive than your tmp directory is on, fs.watch may give you a false positive. You can force nodemon to start using the most compatible legacy method by passing the -L switch, e.g. `nodemon -L /my/odd/file.js`.\n\n# License\n\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n',
79 silly resolved     _id: 'nodemon@0.7.1',
79 silly resolved     dist: { shasum: 'f51de455aed0ae0d5f6e949b7f2b3aaf7f5c2636' },
79 silly resolved     _from: 'nodemon' } ]
80 info install nodemon@0.7.1 into /usr/local/lib
81 info installOne nodemon@0.7.1
82 verbose from cache /Users/siandiaz/.npm/nodemon/0.7.1/package/package.json
83 info /usr/local/lib/node_modules/nodemon unbuild
84 verbose read json /usr/local/lib/node_modules/nodemon/package.json
85 verbose tar unpack /Users/siandiaz/.npm/nodemon/0.7.1/package.tgz
86 silly lockFile 49f7ed19-r-local-lib-node-modules-nodemon /usr/local/lib/node_modules/nodemon
87 verbose lock /usr/local/lib/node_modules/nodemon /Users/siandiaz/.npm/49f7ed19-r-local-lib-node-modules-nodemon.lock
88 silly gunzTarPerm modes [ '755', '644' ]
89 error Error: EACCES, mkdir '/usr/local/lib/node_modules/nodemon'
89 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/nodemon']
89 error   errno: 3,
89 error   code: 'EACCES',
89 error   path: '/usr/local/lib/node_modules/nodemon',
89 error   fstream_type: 'Directory',
89 error   fstream_path: '/usr/local/lib/node_modules/nodemon',
89 error   fstream_class: 'DirWriter',
89 error   fstream_stack:
89 error    [ 'DirWriter._create (/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23)',
89 error      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',
89 error      'Object.oncomplete (fs.js:297:15)' ] }
90 error Please try running this command again as root/Administrator.
91 error System Darwin 12.2.0
92 error command "node" "/usr/local/bin/npm" "install" "nodemon" "-g"
93 error cwd /Users/siandiaz/Dropbox/Development/WebServer/CodigoFacilito/realtime-geolocation-demo
94 error node -v v0.8.12
95 error npm -v 1.1.63
96 error path /usr/local/lib/node_modules/nodemon
97 error fstream_path /usr/local/lib/node_modules/nodemon
98 error fstream_type Directory
99 error fstream_class DirWriter
100 error code EACCES
101 error errno 3
102 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/nodemon'
103 error fstream_stack DirWriter._create (/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23)
103 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53
103 error fstream_stack Object.oncomplete (fs.js:297:15)
104 verbose exit [ 3, true ]
